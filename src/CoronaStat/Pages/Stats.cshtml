@page
@model CoronaStat.Pages.StatsModel
@{
    ViewData["Title"] = "Stats";
}

<!--Required for charting...-->
<head>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.js"></script>
	<script src="~/js/site.js"></script>
</head>

<div>
	<h1>Estatísticas</h1>
	<!--Divisão que responde por 'tudo'-->
	<div>
		<form method="post">
			<div class="form-group">
				@*<input list="browsers" name="browser">
		<datalist id="browsers">

		</datalist>*@
				<table style="width:100%">
					<tr>
						<th><label for="input_state">Estado:</label></th>
						<th><label for="input_city">Cidade:</label></th>
						<th><label for="start_date_picker">Início:</label></th>
						<th><label for="end_date_picker">Fim:</label></th>
					</tr>
					<tr>
						<td>
							<!--This is for state names-->
							<input id="input_state" list="state_locations" onchange="get_cities_from_state(this.value)" asp-for="Location.StateName" />
							<datalist id="state_locations">
								@foreach (string avail_loc in Model.AvailableStates)
								{
									<option value="@avail_loc" />
								}
							</datalist>
						</td>
						<td>
							<input id="input_city" list="city_locations" asp-for="Location.CityName" />
							<div id="city_input_options">
							</div>
						</td>
						<td>
							<input asp-for="Location.StartDate" type="date" id="start_date_picker" asp-format="{0:yyyy-MM-dd}"
										 min="@Html.Raw(Model.date.StartDate.ToString("yyyy-MM-dd"))" max="@Html.Raw(Model.date.EndDate.ToString("yyyy-MM-dd"))">
						</td>
						<td>
							<input asp-for="Location.EndDate" type="date" id="end_date_picker" asp-format="{0:yyyy-MM-dd}"
								min="@Html.Raw(Model.date.StartDate.ToString("yyyy-MM-dd"))" max="@Html.Raw(Model.date.EndDate.ToString("yyyy-MM-dd"))">
						</td>
						<td>
							<button class="btn btn-default">
								Get Data
							</button>
						</td>
					</tr>
				</table>
				
			</div>			
		</form>
	</div>

	<div>
		<!--CHARTS HERE-->
		@foreach (var location in Model.Locations)
		{
			<p>Nome do lugar: @location.StateName</p>
			<p>Max: @Model.Locations.Select(x => x.maxValue).Max()</p>
			<canvas id="@location.Id" width="300" height="150"></canvas>
			<script>
				var ctx = document.getElementById("@location.Id").getContext('2d');

				var data_stuff = {
					type: 'line',
					data: {
						@*labels: [1, 2, 3, 4],*@
						labels: @Html.Raw(Json.Serialize(Model.data_span)),
						datasets: [{
							label: 'Número de contaminados',
							@*data: [1, 2, 3, 4],*@
							data: @Html.Raw(location.JsonData),
							borderColor: 'rgba(@Model.randgen.Next(256), @Model.randgen.Next(256), @Model.randgen.Next(256), 0.8)',
							backgroundColor: 'rgba(0, 0, 0, 0.8)',
							borderWidth: 1,
							fill: false
						}]
					},
					options: {
						title: {
							display: true,
							text: '@Html.Raw(location.StateName)'
						},
						scales: {
							yAxes: [{
								ticks: {
									beginAtZero: true,
									max: @Html.Raw(Model.Locations.Select(x => x.maxValue).Max())
								}
							}]
						}
					}
				};

				var BrazilStats = new Chart(ctx, data_stuff);
			</script>
		}
	</div>
</div>
